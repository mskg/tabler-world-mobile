# build number
name: $(VERSION).$(rev:r)

pool:
  vmImage: 'ubuntu-latest'
  workspace:
    clean: all

variables:
  - name: VERSION
    value: '1.6'
  - name: PACKAGE_DIR
    value: $(System.DefaultWorkingDirectory)/services/tabler-world-api

  - group: AWS Germany
  - group: ENV Germany Shared

pr:
  branches:
    exclude:
      - '*'

trigger:
  branches:
    exclude:
      - develop

    include:
      - release/v1.6

  paths:
    include:
      - packages/**/src/*
      - services/tabler-world-api/src/*
      - services/tabler-world-api/azure-pipelines.yml

stages:
- stage: compile
  jobs:
    - job: dev
      variables:
        - group: ENV Germany DEV
      steps:
        - template: ../devops/package-service.yml
          parameters:
            PACKAGE_DIR: $(PACKAGE_DIR)
            INFRASTRUCTURE_RELEASE_CHANNEL: $(INFRASTRUCTURE_RELEASE_CHANNEL)
            AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)

    - job: test
      variables:
        - group: ENV Germany TEST
      steps:
        - template: ../devops/package-service.yml
          parameters:
            PACKAGE_DIR: $(PACKAGE_DIR)
            INFRASTRUCTURE_RELEASE_CHANNEL: $(INFRASTRUCTURE_RELEASE_CHANNEL)
            AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)

    - job: prod
      variables:
        - group: ENV Germany PROD
      steps:
        - template: ../devops/package-service.yml
          parameters:
            PACKAGE_DIR: $(PACKAGE_DIR)
            INFRASTRUCTURE_RELEASE_CHANNEL: $(INFRASTRUCTURE_RELEASE_CHANNEL)
            AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)

- stage: dev
  dependsOn: compile
  jobs:
  - deployment: aws
    environment: tabler-world-dev
    variables:
      - group: ENV Germany DEV
    strategy:
      runOnce:
        deploy:
          steps:
            - template: ../devops/service.yml
              parameters:
                INFRASTRUCTURE_RELEASE_CHANNEL: $(INFRASTRUCTURE_RELEASE_CHANNEL)
                AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)
                PACKAGE_DIR: $(PACKAGE_DIR)

            - task: AmazonWebServices.aws-vsts-tools.LambdaInvokeFunction.LambdaInvokeFunction@1
              displayName: 'db update'
              continueOnError: true
              timeoutInMinutes: 15
              inputs:
                awsCredentials: AWS
                regionName: $(AWS_DEFAULT_REGION)
                functionName: 'tabler-world-api-$(INFRASTRUCTURE_RELEASE_CHANNEL)-database-update'
                logRequest: true
                logResponse: true


- stage: test
  dependsOn: dev
  condition:
    and(succeeded(), not(eq(variables['Build.SourceBranch'], 'refs/heads/develop')))

  jobs:
  - deployment: aws
    environment: tabler-world-test
    variables:
      - group: ENV Germany TEST
    strategy:
      runOnce:
        deploy:
          steps:
            - template: ../devops/service.yml
              parameters:
                INFRASTRUCTURE_RELEASE_CHANNEL: $(INFRASTRUCTURE_RELEASE_CHANNEL)
                AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)
                PACKAGE_DIR: $(PACKAGE_DIR)

            - task: AmazonWebServices.aws-vsts-tools.LambdaInvokeFunction.LambdaInvokeFunction@1
              displayName: 'db update'
              continueOnError: true
              timeoutInMinutes: 15
              inputs:
                awsCredentials: AWS
                regionName: $(AWS_DEFAULT_REGION)
                functionName: 'tabler-world-api-$(INFRASTRUCTURE_RELEASE_CHANNEL)-database-update'
                logRequest: true
                logResponse: true

- stage: prod
  dependsOn: test
  condition:
    and(succeeded(), not(eq(variables['Build.SourceBranch'], 'refs/heads/develop')))

  jobs:
  - deployment: aws
    environment: tabler-world-prod
    variables:
      - group: ENV Germany PROD
    strategy:
      runOnce:
        deploy:
          steps:
            - template: ../devops/service.yml
              parameters:
                INFRASTRUCTURE_RELEASE_CHANNEL: $(INFRASTRUCTURE_RELEASE_CHANNEL)
                AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)
                PACKAGE_DIR: $(PACKAGE_DIR)

            - task: AmazonWebServices.aws-vsts-tools.LambdaInvokeFunction.LambdaInvokeFunction@1
              displayName: 'db update'
              continueOnError: true
              timeoutInMinutes: 15
              inputs:
                awsCredentials: AWS
                regionName: $(AWS_DEFAULT_REGION)
                functionName: 'tabler-world-api-$(INFRASTRUCTURE_RELEASE_CHANNEL)-database-update'
                logRequest: true
                logResponse: true

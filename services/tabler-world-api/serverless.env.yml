# this allows us to define variables in debug mode only

dev:
  STAGE: ${self:custom.stage}
  AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  REDIS_MAXTTL: 3600 # one hour

test:
  STAGE: ${self:custom.stage}
  AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  REDIS_MAXTTL: 28800 # 8 hours

prod:
  STAGE: ${self:custom.stage}
  AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

api:
  # validate connection and userid
  USERPOOL_ID:
    Fn::ImportValue: CognitoUserPool-${self:custom.stage}

  VALIDATE_ARN:
    Fn::ImportValue: ValidateTokenArn-${self:custom.stage}

  # Websocket
  PUBLISH_ENDPOINT: !Join
    - ''
    - - 'https://'
      - !Ref WebsocketsApi
      - '.execute-api.${self:provider.region}.amazonaws.com/${self:custom.stage}/'

  # Websocket dynamodb
  CONNECTIONS_TABLE: ${self:custom.connections_table}
  SUBSCRIPTIONS_TABLE: ${self:custom.subscriptions_table}

  # Chat dynamodb
  CONVERSATIONS_TABLE: ${self:custom.conversations_table}
  EVENTS_TABLE: ${self:custom.events_table}
  PUSH_SUBSCRIPTIONS_TABLE: ${self:custom.pushsubscriptions_table}

  # Push Queue
  PUSH_QUEUE: ${self:custom.push_queue_url}

  # Bucket for uploading chat attachments
  UPLOAD_BUCKET: ${self:custom.bucket}

  # Caching
  CACHE_TABLE: ${self:custom.cache_table}
  CACHE_VERSION: ${self:custom.cache_version}

  # Throtteling
  #THROTTELING_RATE
  #THROTTELING_GEORATE

  #THROTTELING_WS_DECODE
  #THROTTELING_WS_DELIVERY
  #THROTTELING_WS_SEND

  # Redis
  USE_REDIS: 'true'
  USE_REDIS_LOCATION: 'true'
  REDIS_HOST:
    Fn::ImportValue: RedisEndpointAddress

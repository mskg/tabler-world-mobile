# build number
name: $(VERSION).$(PATCH)

variables:
  - name: VERSION
    value: 1.4
  - name: PATCH
    value: $[counter(variables['VERSION'], 0)]
  - name: ANDROID_VERSION
    value: $[counter('ANDROID_VERSION', 11070)]

  # naming
  #  1.2-dev
  #  1.2-test
  #  1.2-rc1, rc2, ...
  #  1.2-r, r1, r2, ...
  - name: RELASE_CHANNEL_VERSION
    value: '1.4-r'

  - name: RELASE_CHANNEL_BUILD
    value: $[counter(variables['RELASE_CHANNEL_VERSION'], 1)]

  - name: EXPO_RELEASE_CHANNEL
    value: $(RELASE_CHANNEL_VERSION)$(RELASE_CHANNEL_BUILD)

  - name: APP_LANGUAGES
    value: 'en,de,nl,fi,is'

  - group: 'git-crypt'
  - group: 'expo'

  - group: 'AWS Germany'
  - group: 'ENV Germany Shared'
  - group: 'ENV Germany PROD'

  - name: YARN_CACHE_FOLDER
    value: $(Pipeline.Workspace)/.yarn

  - group: "Apple Distribution"
  - group: "Play Store"

  - name: EXPO_SDK_VERSION
    value: "36.0.0"
  - name: TURTLE_VERSION
    value: "0.13.10"

pr:
  branches:
    exclude:
      - '*'

trigger:
  branches:
    include:
      - release/v1.4

  paths:
    include:
      - apps/tabler-app/tsconfig.json
      - apps/tabler-app/yarn.lock
      - apps/tabler-app/azure-pipelines.yml
      - apps/tabler-app/src/*
      - apps/tabler-app/devops/*
      - apps/tabler-app/assets/docs/*
      - apps/tabler-app/assets/fonts/*
      - apps/tabler-app/assets/images/*
      - apps/tabler-app/config/app.json

stages:
- stage: javascript
  pool:
    vmImage: 'ubuntu-latest'
    workspace:
      clean: all
  jobs:
  - job: publish
    steps:
    # - powershell: |
    #     Write-Host 'Patch# $(PATCH)'
    #     $n = ([int]'$(PATCH)').tostring('000')
    #     Write-Host "##vso[build.updatebuildnumber]$(VERSION).$($n)"

    #   displayName: Define build#

    - script: 'echo "$(git log -1 --pretty=%B)" > commit.txt'
      workingDirectory: '$(System.DefaultWorkingDirectory)'
      displayName: Save commit message

    # prepare node environment
    - template: ./devops/node.yml

    # yarn /
    - template: ./devops/yarn.yml
      parameters:
        SOURCEDIR: $(System.DefaultWorkingDirectory)
        YARN_CACHE_FOLDER: $(YARN_CACHE_FOLDER)

    # yarn /App
    - template: ./devops/yarn.yml
      parameters:
        SOURCEDIR: $(System.DefaultWorkingDirectory)/apps/tabler-app
        YARN_CACHE_FOLDER: $(YARN_CACHE_FOLDER)

    # Init expo environment
    - template: ./devops/init-expo.yml
      parameters:
        APPDIR: $(System.DefaultWorkingDirectory)/apps/tabler-app
        APP_VERSION: $(build.buildNumber)
        SOURCESDIR: $(System.DefaultWorkingDirectory)

    - script: npm run licenses
      workingDirectory: '$(System.DefaultWorkingDirectory)/apps/tabler-app'
      displayName: licenses

    # Publish expo
    - script: |
        echo "Release is $EXPO_RELEASE_CHANNEL"
        npx expo publish --non-interactive --max-workers 1 --release-channel $EXPO_RELEASE_CHANNEL
        npx expo publish:history --release-channel $EXPO_RELEASE_CHANNEL -r > deployment.json
      workingDirectory: '$(System.DefaultWorkingDirectory)/apps/tabler-app'
      displayName: publish
      env:
        SENTRY_AUTH_TOKEN: $(SENTRY_AUTH_TOKEN)
        EXPO_RELEASE_CHANNEL: $(EXPO_RELEASE_CHANNEL)

    # yarn /App
    - template: ./devops/publish-pipeline.yml

- stage: native-apps
  dependsOn: javascript
  pool:
    vmImage: "macOS-latest"
    workspace:
      clean: all

  jobs:
    - job: app
      steps:
        - download: current
          artifact: app-config

        - template: ./devops/node.yml

        - task: DownloadSecureFile@1
          name: mobileprovision
          inputs:
            secureFile: "worldroundtableapp_AppStore.mobileprovision"

        - task: DownloadSecureFile@1
          name: iosCertificate
          inputs:
            secureFile: "App_TABLER_APP.p12"

        - task: DownloadSecureFile@1
          name: androidCertificate
          inputs:
            secureFile: "mobile-app.jks"

        # select xcode version
        - script: |
            sudo xcode-select -s /Applications/Xcode_11.3.1.app/Contents/Developer

        # select xcode version
        - script: |
            sudo xcode-select -s /Applications/Xcode_11.3.1.app/Contents/Developer

        # run turtle build
        - script: |
            npm install -g expo-cli
            npm install -g turtle-cli@$(TURTLE_VERSION)

            turtle setup:ios --sdk-version $EXPO_SDK_VERSION

            export EXPO_IOS_DIST_P12_PASSWORD=$(APPLE_P12_PASSWORD)
            turtle build:ios -u $(EXPO_USERNAME) -p $(EXPO_PASSWORD) --team-id $(APPLE_TEAM_ID) --dist-p12-path $(iosCertificate.secureFilePath) --provisioning-profile-path $(mobileprovision.secureFilePath) --release-channel $(EXPO_RELEASE_CHANNEL)

            turtle setup:android --sdk-version $EXPO_SDK_VERSION

            export EXPO_ANDROID_KEYSTORE_PASSWORD=$(ANDROID_KEYSTORE_PASSWORD)
            export EXPO_ANDROID_KEY_PASSWORD=$(ANDROID_KEY_PASSWORD)
            turtle build:android -u $(EXPO_USERNAME) -p $(EXPO_PASSWORD) --keystore-path $(androidCertificate.secureFilePath) --keystore-alias $(ANDROID_KEYSTORE_ALIAS) -t app-bundle --release-channel $(EXPO_RELEASE_CHANNEL)

            cd /users/vsts/expo-apps

            export A=$(ls *.aab)
            export i=$(ls *.ipa)

            echo "##vso[task.setvariable variable=iosArtifact]$i"
            echo "##vso[task.setvariable variable=androidArtifact]$A"

            echo "File name to publish Android"
            echo $A

            echo "File name to publish IOS"
            echo $i
          workingDirectory: $(PIPELINE.WORKSPACE)/app-config
          env:
            APPLE_TEAM_ID: $(APPLE_TEAM_ID)
            TURTLE_VERSION: $(TURTLE_VERSION)
            EXPO_SDK_VERSION: $(EXPO_SDK_VERSION)
            APPLE_P12_PASSWORD: $(APPLE_P12_PASSWORD)
            EXPO_USERNAME: $(EXPO_USERNAME)
            EXPO_PASSWORD: $(EXPO_PASSWORD)
            ANDROID_KEYSTORE_PASSWORD: $(ANDROID_KEYSTORE_PASSWORD)
            ANDROID_KEY_PASSWORD: $(ANDROID_KEY_PASSWORD)
            EXPO_RELEASE_CHANNEL: $(EXPO_RELEASE_CHANNEL)

        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: "/users/vsts/expo-apps/$(iosArtifact)"
            ArtifactName: "ios"

        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: "/users/vsts/expo-apps/$(androidArtifact)"
            ArtifactName: "android"


- stage: deploy-apps
  dependsOn: native-apps
  pool:
    vmImage: "macOS-latest"
    workspace:
      clean: all

  jobs:
    - job: ios
      steps:
        - download: current
          artifact: ios

    - job: android
      steps:
        - download: current
          artifact: android
